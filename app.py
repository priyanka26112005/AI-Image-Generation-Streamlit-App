import streamlit as st 
from dotenv import load_dotenv
import os 
from transformers import LlamaForCausalLM, LlamaTokenizer
from diffusers import StableDiffusionPipeline
import torch

load_dotenv()

# Check if CUDA is available and set device accordingly
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

# Load the LLaMA model and tokenizer
llama_model = LlamaForCausalLM.from_pretrained("meta-llama/Llama-2-7b-chat-hf").to(device)
llama_tokenizer = LlamaTokenizer.from_pretrained("meta-llama/Llama-2-7b-chat-hf")

# Function to generate text prompt using LLaMA
def generate_prompt_using_llama(text):
    inputs = llama_tokenizer(text, return_tensors="pt").to(device)
    outputs = llama_model.generate(**inputs, max_length=50)
    generated_text = llama_tokenizer.decode(outputs[0], skip_special_tokens=True)
    return generated_text

# Function to generate AI-based images using Huggingface Diffusers
def generate_images_using_huggingface_diffusers(text):
    pipe = StableDiffusionPipeline.from_pretrained("runwayml/stable-diffusion-v1-5", torch_dtype=torch.float16 if device.type == "cuda" else torch.float32)
    pipe = pipe.to(device)
    prompt = text
    image = pipe(prompt).images[0] 
    return image

# Streamlit Code
choice = st.sidebar.selectbox("Select your choice", ["Home", "LLaMA", "Huggingface Diffusers"])

if choice == "Home":
    st.title("AI Image Generation App")
    with st.expander("About the App"):
        st.write("This is a simple image generation app that uses AI to generate images from text prompts.")

elif choice == "LLaMA":
    st.subheader("Generate text prompt using LLaMA")
    input_prompt = st.text_input("Enter your base text prompt")
    if input_prompt:
        if st.button("Generate Enhanced Prompt"):
            enhanced_prompt = generate_prompt_using_llama(input_prompt)
            st.write("Generated Prompt: ", enhanced_prompt)

elif choice == "Huggingface Diffusers":
    st.subheader("Image generation using Huggingface Diffusers")
    input_prompt = st.text_input("Enter your text prompt")
    if input_prompt:
        if st.button("Generate Image"):
            image_output = generate_images_using_huggingface_diffusers(input_prompt)
            st.info("Generating image.....")
            st.success("Image Generated Successfully")
            st.image(image_output, caption="Generated by Huggingface Diffusers")
            st.info("Generating image.....")
            st.success("Image Generated Successfully")
            st.image(image_output, caption="Generated by Huggingface Diffusers")
